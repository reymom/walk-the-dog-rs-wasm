# You must change these to your own details.
[package]
name = "rust-webpack-template"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["You <ramon_gs95@hotmail.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2.82", features = ["serde-serialize"] }
console_error_panic_hook = "0.1.7"
rand = "0.8.5"
getrandom = { version = "0.2", features = ["js"] }
futures = "0.3.23"
wasm-bindgen-futures = "0.4.32"
serde = { version = "1.0.143", features = ["derive"] }
anyhow = "1.0.62"
async-trait = "0.1.57"
js-sys = "0.3.60"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.59"
features = [
    "AudioContext",
    "AudioBuffer",
    "AudioBufferSourceNode",
    "AudioDestinationNode",
    "console",
    "GainNode",
    "AudioParam",
    "Window",
    "Document",
    "HtmlCanvasElement",
    "CanvasRenderingContext2d",
    "HtmlImageElement",
    "Performance",
    "Response",
    "KeyboardEvent",
]

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.32"
js-sys = "0.3.59"
